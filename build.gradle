import java.nio.file.Files;
import java.nio.file.StandardCopyOption;

apply plugin: 'java'
apply plugin: 'application'

repositories {
    jcenter()
}
dependencies {
   // compile 'org.xerial:sqlite-jdbc:3.7.2'
   // compile 'com.google.code.gson:gson:2.8.2'
   compile 'se.sawano.java:alphanumeric-comparator:1.4.1'
 // compile files('myutils.jar')
  compile 'org.slf4j:slf4j-jdk14:1.8.0-beta2'
  compile 'org.json:json:20180813'
}
 
version = 1.12
sourceCompatibility = JavaVersion.VERSION_1_8 
targetCompatibility = JavaVersion.VERSION_1_8
 
mainClassName = 'Main'
ext.appdir = file(System.env.SAM_PROGRAMS+'/backup/backup.beta/bin')
	
task combineCss {
  def rsrc = sourceSets.main.resources.srcDirs[0].toString() 
  ext.rsrcDir = file(rsrc + '/styles')
  ext.outputFile = file(rsrc+'/styles.css')
   
  inputs.dir rsrcDir
  outputs.file outputFile
  
  doLast {
      file(outputFile).text = file(rsrcDir)
		.listFiles()
		.collect{f -> "/** ${f.name} */ \n"+f.text+'\n\n'}
		.join()
  }
}

jar.excludes << '/styles'
// ensure combineCss run
jar.dependsOn << combineCss
// ensure jar runs after combineCss 
jar.mustRunAfter combineCss

run.dependsOn << combineCss
run.mustRunAfter combineCss

run {
 main 'Main'
 workingDir appdir.parent
}

task deleteJars {
  doLast {
     file(appdir).listFiles().each({
       if(it.name.endsWith('.jar'))
         it.delete();
     });
  }
}

task install(type: Copy, dependsOn:[installDist, deleteJars]) {
  def libdir = file(new File(installDist.destinationDir, 'lib')) 
  from libdir
  into appdir
  
  doLast {
     new File(appdir, 'run.cmd').text = """
  @echo off
  setlocal
  
  ${versionText()}
  
  java %JVM_OPTS% %JAVA_OPTS% -cp \"%~dp0;%~dp0${String.join(';%~dp0', libdir.list())}\" ${mainClassName} %*
  
  """.stripIndent()
  } 
}

def versionText() {
  if(!version && version == 'unspecified') return '';
  return """
  SET APP_VERSION=${version}
  if [%1]==[-v] (
    echo version: %APP_VERSION%
    goto:eof
  )
  if [%1]==[--version] (
    echo version: %APP_VERSION%
    goto:eof
  )
  """;    
}

jar {
  exclude '*.fxgraph'
  exclude 'styles'
  exclude 'sql-column-change_from_dir_id_to_parent_id.sql'
}

defaultTasks 'install'
